{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["Tag","data","location","pageContext","tag","ghostTag","posts","allGhostPost","edges","type","className","name","description","map","node","post","id","pageQuery"],"mappings":"iMAyDeA,UA5CH,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YACrBC,EAAMH,EAAKI,SACXC,EAAQL,EAAKM,aAAaC,MAEhC,OACI,qCACI,cAAC,IAAD,CACIP,KAAMA,EACNC,SAAUA,EACVO,KAAK,WAET,cAAC,IAAD,UACI,sBAAKC,UAAU,YAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,6BAAKN,EAAIO,OACRP,EAAIQ,YAAc,4BAAIR,EAAIQ,cAAmB,QAElD,yBAASF,UAAU,YAAnB,SACKJ,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAEP,aADA,CACC,IAAD,CAAwBC,KAAMD,GAAfA,EAAKE,SAG5B,cAAC,IAAD,CAAYb,YAAaA,aAuBtC,IAAMc,EAAS","file":"component---src-templates-tag-js-0f433f34dbf65e713acf.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport { Layout, PostCard, Pagination } from '../components/common'\r\nimport { MetaData } from '../components/common/meta'\r\n\r\n/**\r\n* Tag page (/tag/:slug)\r\n*\r\n* Loads all posts for the requested tag incl. pagination.\r\n*\r\n*/\r\nconst Tag = ({ data, location, pageContext }) => {\r\n    const tag = data.ghostTag\r\n    const posts = data.allGhostPost.edges\r\n\r\n    return (\r\n        <>\r\n            <MetaData\r\n                data={data}\r\n                location={location}\r\n                type=\"series\"\r\n            />\r\n            <Layout>\r\n                <div className=\"container\">\r\n                    <header className=\"tag-header\">\r\n                        <h1>{tag.name}</h1>\r\n                        {tag.description ? <p>{tag.description}</p> : null }\r\n                    </header>\r\n                    <section className=\"post-feed\">\r\n                        {posts.map(({ node }) => (\r\n                            // The tag below includes the markup for each post - components/common/PostCard.js\r\n                            <PostCard key={node.id} post={node} />\r\n                        ))}\r\n                    </section>\r\n                    <Pagination pageContext={pageContext} />\r\n                </div>\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nTag.propTypes = {\r\n    data: PropTypes.shape({\r\n        ghostTag: PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            description: PropTypes.string,\r\n        }),\r\n        allGhostPost: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    location: PropTypes.shape({\r\n        pathname: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n    pageContext: PropTypes.object,\r\n}\r\n\r\nexport default Tag\r\n\r\nexport const pageQuery = graphql`\r\n    query GhostTagQuery($slug: String!, $limit: Int!, $skip: Int!) {\r\n        ghostTag(slug: { eq: $slug }) {\r\n            ...GhostTagFields\r\n        }\r\n        allGhostPost(\r\n            sort: { order: DESC, fields: [published_at] },\r\n            filter: {tags: {elemMatch: {slug: {eq: $slug}}}},\r\n            limit: $limit,\r\n            skip: $skip\r\n        ) {\r\n            edges {\r\n                node {\r\n                ...GhostPostFields\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}